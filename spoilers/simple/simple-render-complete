import { jsx } from '@infra'
import { assertNever } from '@util'
import { Recipe, Ingredient } from '../model/recipe'

export function renderRecipes(recipes: Recipe[]) {
  return <main>
    {recipes.map(recipe => <section>{renderRecipe(recipe)}</section>)}
  </main>
}

export function renderRecipe(recipe: Recipe) {
  return <article className="container">
    <div className="title">{recipe.name}</div>
    <div className="recipe-image" style={{background: `url(${recipe.imgUrl})`}}></div>
    <div className="details">
      <strong>By {recipe.author}</strong>
    </div>
    
    <section className="items">
      <span className="item-title">Ingredients</span>
      <ul className="checkmark">
        {recipe.ingredients.map(ingredient => <li>
          <span className="ingredient">{ingredient.name}</span>&nbsp;<span className="amount">{renderAmount(ingredient)}</span>
        </li>)}
      </ul>
    </section>
  </article>
}

function renderAmount(ingredient: Ingredient) {
  switch (ingredient.unit) {
    case undefined:
      return ingredient.quantity
    case 'g':
    case 'ml':
      return `${ingredient.quantity} ${ingredient.unit}`
    case 'tbs':
    case 'tsp':
    case 'oz':
    case 'cup':
      return `${ingredient.quantity} ${ingredient.unit}`
    default: return assertNever(ingredient.unit);
  }
}